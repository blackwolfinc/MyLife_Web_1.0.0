{
  "_args": [
    [
      {
        "raw": "@nodelib/fs.stat@^2.0.2",
        "scope": "@nodelib",
        "escapedName": "@nodelib%2ffs.stat",
        "name": "@nodelib/fs.stat",
        "rawSpec": "^2.0.2",
        "spec": ">=2.0.2 <3.0.0",
        "type": "range"
      },
      "/home/bagas/Documents/2.February/MyLife_Web_1.0.0/node_modules/fast-glob"
    ]
  ],
  "_from": "@nodelib/fs.stat@^2.0.2",
  "_hasShrinkwrap": false,
  "_id": "@nodelib/fs.stat@2.0.4",
  "_location": "/@nodelib/fs.stat",
  "_nodeVersion": "14.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/fs.stat_2.0.4_1609076320098_0.02095061615279148"
  },
  "_npmUser": {
    "name": "mrmlnc",
    "email": "dmalinochkin@rambler.ru"
  },
  "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (win32)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@nodelib/fs.stat@^2.0.2",
    "scope": "@nodelib",
    "escapedName": "@nodelib%2ffs.stat",
    "name": "@nodelib/fs.stat",
    "rawSpec": "^2.0.2",
    "spec": ">=2.0.2 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@nodelib/fs.scandir",
    "/fast-glob"
  ],
  "_resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.4.tgz",
  "_shasum": "a3f2dd61bab43b8db8fa108a121cfffe4c676655",
  "_shrinkwrap": null,
  "_spec": "@nodelib/fs.stat@^2.0.2",
  "_where": "/home/bagas/Documents/2.February/MyLife_Web_1.0.0/node_modules/fast-glob",
  "dependencies": {},
  "description": "Get the status of a file with some features",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-IYlHJA0clt2+Vg7bccq+TzRdJvv19c2INqBSsoOLp1je7xjtr7J26+WXR72MCdvU9q1qTzIWDfhMf+DRvQJK4Q==",
    "shasum": "a3f2dd61bab43b8db8fa108a121cfffe4c676655",
    "tarball": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.4.tgz",
    "fileCount": 50,
    "unpackedSize": 128688,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf6I5gCRA9TVsSAnZWagAA0xcP+wfw/Wvr7Qj2LfV+5c/r\nMb/b8Ic5RyXqXuZdpfHfypHmRAILWMUXscc0Sg/eRTWOKW9rLEC7mDN49vBa\nx3Ijd9F6JGBZpzALQwn55Q84Ps84tSEGj4KS2VtZHIomXnwmKegXcqeiUhRx\n3U1TA8kjXSH4vYuw+AUNLtmhgyxHsnBff3/TUU2DgHd/65J/ANpdo7uRg3lX\nYy0vJ2zdUWsEOk4k56yWfACNSuBTB/FDXfluOy0Ki9+AtNThSdNEw7P4pQPm\nutcp3OK62ZZI+1pBQOriUkFj0NCTE2SFImw1FtZIknHXtFKOLko5tkqzec6Z\n8JNWJz6tlrJzS3MvWSH5Zz7fdziDW0+T7j67BRhUItEUC3MwNj9mvu3mWMFo\nlga8v9t7nAdfzlzHpH+z6FZdzEUMqySNc3HMKuv6btVe0lcQJP3XglpHnjzt\nwkAXPNT3j6uIMaslSQie5CBMrb2Ffl8BiSWOXCffcDHKGdFh9GnGcAZZIRNy\nmqbFuDDrEz3Vh+dhOmIVAc0pZBhPOaZKfiab0MWVbaDag8LtPam9g66Fwwq9\nmBSILHfjT2QX6fd2vrMAuny1xK95uO+odr3Rc5Jkh+mQk1UYzageHmL5cuYI\nSVXsKSxWc+zWEg8uMmPwUekH5NPmlS/zEJF7p6NmbnRP9tlOx+5u6tpLX+J4\ncZlo\r\n=14Th\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 8"
  },
  "gitHead": "cb5f7e893a986164c3b847a4f1faef6c54cadd68",
  "keywords": [
    "NodeLib",
    "fs",
    "FileSystem",
    "file system",
    "stat"
  ],
  "license": "MIT",
  "main": "out/index.js",
  "maintainers": [
    {
      "name": "mrmlnc",
      "email": "dmalinochkin@rambler.ru"
    }
  ],
  "name": "@nodelib/fs.stat",
  "optionalDependencies": {},
  "readme": "# @nodelib/fs.stat\n\n> Get the status of a file with some features.\n\n## :bulb: Highlights\n\nWrapper around standard method `fs.lstat` and `fs.stat` with some features.\n\n* :beginner: Normally follows symbolic link.\n* :gear: Can safely work with broken symbolic link.\n\n## Install\n\n```console\nnpm install @nodelib/fs.stat\n```\n\n## Usage\n\n```ts\nimport * as fsStat from '@nodelib/fs.stat';\n\nfsStat.stat('path', (error, stats) => { /* … */ });\n```\n\n## API\n\n### .stat(path, [optionsOrSettings], callback)\n\nReturns an instance of `fs.Stats` class for provided path with standard callback-style.\n\n```ts\nfsStat.stat('path', (error, stats) => { /* … */ });\nfsStat.stat('path', {}, (error, stats) => { /* … */ });\nfsStat.stat('path', new fsStat.Settings(), (error, stats) => { /* … */ });\n```\n\n### .statSync(path, [optionsOrSettings])\n\nReturns an instance of `fs.Stats` class for provided path.\n\n```ts\nconst stats = fsStat.stat('path');\nconst stats = fsStat.stat('path', {});\nconst stats = fsStat.stat('path', new fsStat.Settings());\n```\n\n#### path\n\n* Required: `true`\n* Type: `string | Buffer | URL`\n\nA path to a file. If a URL is provided, it must use the `file:` protocol.\n\n#### optionsOrSettings\n\n* Required: `false`\n* Type: `Options | Settings`\n* Default: An instance of `Settings` class\n\nAn [`Options`](#options) object or an instance of [`Settings`](#settings) class.\n\n> :book: When you pass a plain object, an instance of the `Settings` class will be created automatically. If you plan to call the method frequently, use a pre-created instance of the `Settings` class.\n\n### Settings([options])\n\nA class of full settings of the package.\n\n```ts\nconst settings = new fsStat.Settings({ followSymbolicLink: false });\n\nconst stats = fsStat.stat('path', settings);\n```\n\n## Options\n\n### `followSymbolicLink`\n\n* Type: `boolean`\n* Default: `true`\n\nFollow symbolic link or not. Call `fs.stat` on symbolic link if `true`.\n\n### `markSymbolicLink`\n\n* Type: `boolean`\n* Default: `false`\n\nMark symbolic link by setting the return value of `isSymbolicLink` function to always `true` (even after `fs.stat`).\n\n> :book: Can be used if you want to know what is hidden behind a symbolic link, but still continue to know that it is a symbolic link.\n\n### `throwErrorOnBrokenSymbolicLink`\n\n* Type: `boolean`\n* Default: `true`\n\nThrow an error when symbolic link is broken if `true` or safely return `lstat` call if `false`.\n\n### `fs`\n\n* Type: [`FileSystemAdapter`](./src/adapters/fs.ts)\n* Default: A default FS methods\n\nBy default, the built-in Node.js module (`fs`) is used to work with the file system. You can replace any method with your own.\n\n```ts\ninterface FileSystemAdapter {\n\tlstat?: typeof fs.lstat;\n\tstat?: typeof fs.stat;\n\tlstatSync?: typeof fs.lstatSync;\n\tstatSync?: typeof fs.statSync;\n}\n\nconst settings = new fsStat.Settings({\n\tfs: { lstat: fakeLstat }\n});\n```\n\n## Changelog\n\nSee the [Releases section of our GitHub project](https://github.com/nodelib/nodelib/releases) for changelog for each release version.\n\n## License\n\nThis software is released under the terms of the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.stat"
  },
  "scripts": {
    "build": "npm run clean && npm run compile && npm run lint && npm test",
    "clean": "rimraf {tsconfig.tsbuildinfo,out}",
    "compile": "tsc -b .",
    "compile:watch": "tsc -p . --watch --sourceMap",
    "lint": "eslint \"src/**/*.ts\" --cache",
    "test": "mocha \"out/**/*.spec.js\" -s 0",
    "watch": "npm run clean && npm run compile:watch"
  },
  "typings": "out/index.d.ts",
  "version": "2.0.4"
}
