{
  "_args": [
    [
      {
        "raw": "emoji-regex@^9.0.0",
        "scope": null,
        "escapedName": "emoji-regex",
        "name": "emoji-regex",
        "rawSpec": "^9.0.0",
        "spec": ">=9.0.0 <10.0.0",
        "type": "range"
      },
      "/home/bagas/Documents/2.February/MyLife_Web_1.0.0/node_modules/eslint-plugin-jsx-a11y"
    ]
  ],
  "_from": "emoji-regex@^9.0.0",
  "_hasShrinkwrap": false,
  "_id": "emoji-regex@9.2.1",
  "_location": "/eslint-plugin-jsx-a11y/emoji-regex",
  "_nodeVersion": "14.15.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/emoji-regex_9.2.1_1611911403238_0.23326161744932872"
  },
  "_npmUser": {
    "name": "google-wombot",
    "email": "node-team-npm+wombot@google.com"
  },
  "_npmVersion": "6.14.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "emoji-regex@^9.0.0",
    "scope": null,
    "escapedName": "emoji-regex",
    "name": "emoji-regex",
    "rawSpec": "^9.0.0",
    "spec": ">=9.0.0 <10.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eslint-plugin-jsx-a11y"
  ],
  "_resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.1.tgz",
  "_shasum": "c9b25604256bb3428964bead3ab63069d736f7ee",
  "_shrinkwrap": null,
  "_spec": "emoji-regex@^9.0.0",
  "_where": "/home/bagas/Documents/2.February/MyLife_Web_1.0.0/node_modules/eslint-plugin-jsx-a11y",
  "author": {
    "name": "Mathias Bynens",
    "url": "https://mathiasbynens.be/"
  },
  "bugs": {
    "url": "https://github.com/mathiasbynens/emoji-regex/issues"
  },
  "dependencies": {},
  "description": "A regular expression to match all Emoji-only symbols as per the Unicode Standard.",
  "devDependencies": {
    "@babel/cli": "^7.4.4",
    "@babel/core": "^7.4.4",
    "@babel/plugin-proposal-unicode-property-regex": "^7.4.4",
    "@babel/preset-env": "^7.4.4",
    "@unicode/unicode-13.0.0": "^1.0.3",
    "mocha": "^6.1.4",
    "regexgen": "^1.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-117l1H6U4X3Krn+MrzYrL57d5H7siRHWraBs7s+LjRuFK7Fe7hJqnJ0skWlinqsycVLU5YAo6L8CsEYQ0V5prg==",
    "shasum": "c9b25604256bb3428964bead3ab63069d736f7ee",
    "tarball": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.1.tgz",
    "fileCount": 10,
    "unpackedSize": 98058,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgE9DrCRA9TVsSAnZWagAAy4oP/ikfqONfvODybsCvg9FC\nmVpQBIZj6489gHidF9pABMMEXSJYYAnx5/EEbiCpTUAQLHPdWI85rfQT3lbK\nJ6CenxmrOBgD7BZiCctjiIS6c6GVU8AjBL7Qm2yveQvbD8GHPLVZzWKAD/12\nPYYeudldYL3J2TTdTshLgHbZvFHrT1159ktZnQqA6r69t2UyOHMy/veblJqS\nMGQR+YO2PvKpQOuV7TqMLJloadNLwL8eKqub4V/U4c70qWEocMU7Y9aTkyNh\ncSYbOVpi2ChXvjKoNxgaIK4110HQXlJk7o/zM0iP2dLClGL5tgmFbJByI8Xo\n9r0IlS1XUIe6zHpr/hw8Dcp2Cd8qTamSrO9oPsvpFWY+AuEST/NWlV33hw/w\nEdoXXn0b7XGmANamk80kvllK64jfLkvRv0p2W/1jTLdGg3ORapqYmvPLMMi5\ndJOQGmgbLnnXtiMmZSzaH/8hR208uE63KT0x9XwJ+D5VS7hZeWs2caXNvKV5\nEX/OGb9j7Idm4LtnZefFQyfTKfBdYmykMNP4Avp67mTcx9Tr7snTkZTUykxQ\nEJ7KcN1vwwjyzN/LbfWPDhG1CA8dFcFvWwt1y22S7lllPG+cEjMWxwbBsP2U\n4uGq6CGyvjB8SzCbbUIKGz3q/cKENgWaaB2V4MIV02JptKWIC7sXtclwdwah\ngkEW\r\n=lXB9\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "LICENSE-MIT.txt",
    "index.js",
    "index.d.ts",
    "RGI_Emoji.js",
    "text.js",
    "es2015/index.js",
    "es2015/RGI_Emoji.js",
    "es2015/text.js"
  ],
  "gitHead": "8f0033fc230c4cb7945b5e3cda7e6902e178c747",
  "homepage": "https://mths.be/emoji-regex",
  "keywords": [
    "unicode",
    "regex",
    "regexp",
    "regular expressions",
    "code points",
    "symbols",
    "characters",
    "emoji"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mathias",
      "email": "mathias@qiwi.be"
    },
    {
      "name": "google-wombot",
      "email": "node-team-npm+wombot@google.com"
    }
  ],
  "name": "emoji-regex",
  "optionalDependencies": {},
  "readme": "# emoji-regex [![Build status](https://travis-ci.org/mathiasbynens/emoji-regex.svg?branch=master)](https://travis-ci.org/mathiasbynens/emoji-regex)\n\n_emoji-regex_ offers a regular expression to match all emoji symbols and sequences (including textual representations of emoji) as per the Unicode Standard.\n\nThis repository contains a script that generates this regular expression based on [Unicode data](https://github.com/node-unicode/node-unicode-data). Because of this, the regular expression can easily be updated whenever new emoji are added to the Unicode standard.\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install emoji-regex\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst emojiRegex = require('emoji-regex/RGI_Emoji.js');\n// Note: because the regular expression has the global flag set, this module\n// exports a function that returns the regex rather than exporting the regular\n// expression itself, to make it impossible to (accidentally) mutate the\n// original regular expression.\n\nconst text = `\n\\u{231A}: ⌚ default emoji presentation character (Emoji_Presentation)\n\\u{2194}\\u{FE0F}: ↔️ default text presentation character rendered as emoji\n\\u{1F469}: 👩 emoji modifier base (Emoji_Modifier_Base)\n\\u{1F469}\\u{1F3FF}: 👩🏿 emoji modifier base followed by a modifier\n`;\n\nconst regex = emojiRegex();\nlet match;\nwhile (match = regex.exec(text)) {\n  const emoji = match[0];\n  console.log(`Matched sequence ${ emoji } — code points: ${ [...emoji].length }`);\n}\n```\n\nConsole output:\n\n```\nMatched sequence ⌚ — code points: 1\nMatched sequence ⌚ — code points: 1\nMatched sequence ↔️ — code points: 2\nMatched sequence ↔️ — code points: 2\nMatched sequence 👩 — code points: 1\nMatched sequence 👩 — code points: 1\nMatched sequence 👩🏿 — code points: 2\nMatched sequence 👩🏿 — code points: 2\n```\n\n## Regular expression flavors\n\nThe package comes with three distinct regular expressions:\n\n```js\n// This is the recommended regular expression to use. It matches all\n// emoji recommended for general interchange, as defined via the\n// `RGI_Emoji` property in the Unicode Standard.\n// https://unicode.org/reports/tr51/#def_rgi_set\n// When in doubt, use this!\nconst emojiRegexRGI = require('emoji-regex/RGI_Emoji.js');\n\n// This is the old regular expression, prior to `RGI_Emoji` being\n// standardized. In addition to all `RGI_Emoji` sequences, it matches\n// some emoji you probably don’t want to match (such as emoji component\n// symbols that are not meant to be used separately).\nconst emojiRegex = require('emoji-regex/index.js');\n\n// This regular expression matches even more emoji than the previous\n// one, including emoji that render as text instead of icons (i.e.\n// emoji that are not `Emoji_Presentation` symbols and that aren’t\n// forced to render as emoji by a variation selector).\nconst emojiRegexText = require('emoji-regex/text.js');\n```\n\nAdditionally, in environments which support ES2015 Unicode escapes, you may `require` ES2015-style versions of the regexes:\n\n```js\nconst emojiRegexRGI = require('emoji-regex/es2015/RGI_Emoji.js');\nconst emojiRegex = require('emoji-regex/es2015/index.js');\nconst emojiRegexText = require('emoji-regex/es2015/text.js');\n```\n\n## For maintainers\n\n### How to update emoji-regex after new Unicode Standard releases\n\n1. Update the Unicode data dependency in `package.json` by running the following commands:\n\n    ```sh\n    # Example: updating from Unicode v12 to Unicode v13.\n    npm uninstall @unicode/unicode-12.0.0\n    npm install @unicode/unicode-13.0.0 --save-dev\n    ````\n\n1. Generate the new output:\n\n    ```sh\n    npm run build\n    ```\n\n1. Verify that tests still pass:\n\n    ```sh\n    npm test\n    ```\n\n1. Send a pull request with the changes, and get it reviewed & merged.\n\n1. On the `master` branch, bump the emoji-regex version number in `package.json`:\n\n    ```sh\n    npm version patch -m 'Release v%s'\n    ```\n\n    Instead of `patch`, use `minor` or `major` [as needed](https://semver.org/).\n\n    Note that this produces a Git commit + tag.\n\n1. Push the release commit and tag:\n\n    ```sh\n    git push               # push the commit\n    git push origin v0.1.2 # push the tag\n    ```\n\n    Our CI then automatically publishes the new release to npm.\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\n_emoji-regex_ is available under the [MIT](https://mths.be/mit) license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mathiasbynens/emoji-regex.git"
  },
  "scripts": {
    "build": "rm -rf -- es2015; babel src -d .; NODE_ENV=es2015 babel src -d ./es2015; cp src/RGI_Emoji-pattern.txt .; node script/inject-sequences.js",
    "test": "mocha",
    "test:watch": "npm run test -- --watch"
  },
  "types": "index.d.ts",
  "version": "9.2.1"
}
