{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bagasajinugroho/Desktop/Kerja/MyLife_Web_1.0.0/src/Pages/Components/UploadFileDrop.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nexport const UploadFileDrop = () => {\n  var _s = $RefreshSig$();\n\n  const thumbsContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16\n  };\n  const thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    width: 100,\n    height: 100,\n    padding: 4,\n    boxSizing: 'border-box'\n  };\n  const thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n  };\n  const img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n  };\n\n  function Previews(props) {\n    _s();\n\n    const [files, setFiles] = useState([]);\n    const {\n      getRootProps,\n      getInputProps\n    } = useDropzone({\n      accept: 'image/*',\n      onDrop: acceptedFiles => {\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })));\n      }\n    });\n    const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumb,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: thumbInner,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: file.preview,\n          style: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this)\n    }, file.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this));\n    useEffect(() => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n            className: 'dropzone'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop some files here, or click to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          style: thumbsContainer,\n          children: thumbs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  }\n\n  _s(Previews, \"HtUHmGo3hwDZKSmIKg3riAANKQ4=\", false, function () {\n    return [useDropzone];\n  });\n};\n_c = UploadFileDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFileDrop\");","map":{"version":3,"sources":["/Users/bagasajinugroho/Desktop/Kerja/MyLife_Web_1.0.0/src/Pages/Components/UploadFileDrop.jsx"],"names":["React","useEffect","useState","useDropzone","UploadFileDrop","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","Previews","props","files","setFiles","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","thumbs","name","forEach","revokeObjectURL","className"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\n\n\n\nexport const UploadFileDrop = () => {\n\n\n    const thumbsContainer = {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16\n      };\n      \n      const thumb = {\n        display: 'inline-flex',\n        borderRadius: 2,\n        border: '1px solid #eaeaea',\n        marginBottom: 8,\n        marginRight: 8,\n        width: 100,\n        height: 100,\n        padding: 4,\n        boxSizing: 'border-box'\n      };\n      \n      const thumbInner = {\n        display: 'flex',\n        minWidth: 0,\n        overflow: 'hidden'\n      };\n      \n      const img = {\n        display: 'block',\n        width: 'auto',\n        height: '100%'\n      };\n      function Previews(props) {\n        const [files, setFiles] = useState([]);\n        const {getRootProps, getInputProps} = useDropzone({\n          accept: 'image/*',\n          onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n              preview: URL.createObjectURL(file)\n            })));\n          }\n        });\n\n        const thumbs = files.map(file => (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                <img\n                  src={file.preview}\n                  style={img}\n                />\n              </div>\n            </div>\n          ));\n        \n          useEffect(() => () => {\n            // Make sure to revoke the data uris to avoid memory leaks\n            files.forEach(file => URL.revokeObjectURL(file.preview));\n          }, [files]);\n\n    return (\n        <div>\n             <section className=\"container\">\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <aside style={thumbsContainer}>\n        {thumbs}\n      </aside>\n    </section>\n        </div>\n    )\n}\n\n}\n\n\n\n\n\n  \n  \n\n\n"]},"metadata":{},"sourceType":"module"}