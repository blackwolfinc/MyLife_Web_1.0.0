{
  "_args": [
    [
      {
        "raw": "postcss-safe-parser@5.0.2",
        "scope": null,
        "escapedName": "postcss-safe-parser",
        "name": "postcss-safe-parser",
        "rawSpec": "5.0.2",
        "spec": "5.0.2",
        "type": "version"
      },
      "/home/bagas/Documents/2.February/MyLife_Web_1.0.0/node_modules/react-scripts"
    ]
  ],
  "_from": "postcss-safe-parser@5.0.2",
  "_hasShrinkwrap": false,
  "_id": "postcss-safe-parser@5.0.2",
  "_location": "/postcss-safe-parser",
  "_nodeVersion": "14.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postcss-safe-parser_5.0.2_1601168611201_0.04856937437142239"
  },
  "_npmUser": {
    "name": "ai",
    "email": "andrey@sitnik.ru"
  },
  "_npmVersion": "6.14.8",
  "_phantomChildren": {
    "colorette": "1.2.1",
    "nanoid": "3.1.20",
    "source-map": "0.6.1"
  },
  "_requested": {
    "raw": "postcss-safe-parser@5.0.2",
    "scope": null,
    "escapedName": "postcss-safe-parser",
    "name": "postcss-safe-parser",
    "rawSpec": "5.0.2",
    "spec": "5.0.2",
    "type": "version"
  },
  "_requiredBy": [
    "/react-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-5.0.2.tgz",
  "_shasum": "459dd27df6bc2ba64608824ba39e45dacf5e852d",
  "_shrinkwrap": null,
  "_spec": "postcss-safe-parser@5.0.2",
  "_where": "/home/bagas/Documents/2.February/MyLife_Web_1.0.0/node_modules/react-scripts",
  "author": {
    "name": "Andrey Sitnik",
    "email": "andrey@sitnik.ru"
  },
  "bugs": {
    "url": "https://github.com/postcss/postcss-safe-parser/issues"
  },
  "dependencies": {
    "postcss": "^8.1.0"
  },
  "description": "Fault-tolerant CSS parser for PostCSS",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-jDUfCPJbKOABhwpUKcqCVbbXiloe/QXMcbJ6Iipf3sDIihEzTqRCeMBfRaOHxhBuTYqtASrI1KJWxzztZU4qUQ==",
    "shasum": "459dd27df6bc2ba64608824ba39e45dacf5e852d",
    "tarball": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-5.0.2.tgz",
    "fileCount": 6,
    "unpackedSize": 6342,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfb+TjCRA9TVsSAnZWagAAElUP/irYPMnRUx/aQ2HU9sz6\n5R9AANAcSXptVQb3sjSlpPrBJz1zwmA75kB2DR2xsr5kxIZvI5yX5Q7vem7k\niVzuJa9u3RNg4X1RsWZG1im0rlmXasJgC8pjFBYQe8qVsjKOnBUCJa+GZiJV\nxkTT9omqBCnuwfMnjMzz9uRESieaIRgoBUEGFOoeW7uwEVL2rrFbfOCVyIv8\nNDF3URBvcq2fqkbMNUJRdIp0b1uBiWEq0wp5nvUNWCN9Wt3/8zdU7j1ui3Ia\nnV11AuMMjaQrRG3LHsV8si6iTklUZfmzCMRnf4EU4en1IcNeVtrqJYpywfNQ\nALZt5T3RJ1BqNB6wU0Wl+1uOF/hzMkvL0sbzCDZRI+NZ0cg0v09jIAHu2E0/\nJJjXYqAvELOEJGysW2l3wZ2KDKjcpwy9odSlXUBABRKv4eZKu/YmQQzXa2GE\nmPGAzlp/VzPeMWqqUq3UbSyxuz4UPvxAARy3U4jhT+FkGH9nB5F9JdzqfWZI\nhp2cyBMpaZR5iuw0/CPBx+rGO2zGrFPhR2LY7utHPxBfkaTUznXTFljU6TyP\nVQMIBm3pbRTi1KaqlQE2ML0pOqo20G5OvrTJC5iB2tiA56kqfe/5/Vqd+euU\nB/86jS7xwunGppMy+2GF4hMv1hIN2skPoAizYppwtIHfG3hGqLAEnrIHdV8k\nijEB\r\n=5ytm\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=10.0"
  },
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/postcss/"
  },
  "homepage": "https://github.com/postcss/postcss-safe-parser#readme",
  "keywords": [
    "css",
    "postcss",
    "postcss-syntax",
    "parser",
    "fault tolerant"
  ],
  "license": "MIT",
  "main": "lib/safe-parse",
  "maintainers": [
    {
      "name": "ai",
      "email": "andrey@sitnik.ru"
    }
  ],
  "name": "postcss-safe-parser",
  "optionalDependencies": {},
  "readme": "# PostCSS Safe Parser\n\n<img align=\"right\" width=\"135\" height=\"95\"\n     title=\"Philosopher’s stone, logo of PostCSS\"\n     src=\"https://postcss.org/logo-leftp.svg\">\n\nA fault-tolerant CSS parser for [PostCSS], which will find & fix syntax errors,\ncapable of parsing any input. It is useful for:\n\n* Parse legacy code with many hacks. For example, it can parse all examples\n  from [Browserhacks].\n* Works with demo tools with live input like [Autoprefixer demo].\n\n[Autoprefixer demo]: http://simevidas.jsbin.com/gufoko/quiet\n[Browserhacks]:      http://browserhacks.com/\n[PostCSS]:           https://github.com/postcss/postcss\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n  <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n\n## Usage\n\n```js\nconst safe = require('postcss-safe-parser')\n\nconst badCss = 'a {'\n\npostcss(plugins).process(badCss, { parser: safe }).then(result => {\n  result.css //= 'a {}'\n})\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/postcss-safe-parser.git"
  },
  "version": "5.0.2"
}
