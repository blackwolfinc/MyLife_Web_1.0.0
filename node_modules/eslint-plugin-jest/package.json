{
  "_args": [
    [
      {
        "raw": "eslint-plugin-jest@^24.1.0",
        "scope": null,
        "escapedName": "eslint-plugin-jest",
        "name": "eslint-plugin-jest",
        "rawSpec": "^24.1.0",
        "spec": ">=24.1.0 <25.0.0",
        "type": "range"
      },
      "/home/bagas/Documents/2.February/MyLife_Web_1.0.0/node_modules/react-scripts"
    ]
  ],
  "_from": "eslint-plugin-jest@^24.1.0",
  "_hasShrinkwrap": false,
  "_id": "eslint-plugin-jest@24.1.5",
  "_location": "/eslint-plugin-jest",
  "_nodeVersion": "14.15.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/eslint-plugin-jest_24.1.5_1613536744459_0.049948397581042414"
  },
  "_npmUser": {
    "name": "simenb",
    "email": "sbekkhus91@gmail.com"
  },
  "_npmVersion": "6.14.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eslint-plugin-jest@^24.1.0",
    "scope": null,
    "escapedName": "eslint-plugin-jest",
    "name": "eslint-plugin-jest",
    "rawSpec": "^24.1.0",
    "spec": ">=24.1.0 <25.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/eslint-plugin-jest/-/eslint-plugin-jest-24.1.5.tgz",
  "_shasum": "1e866a9f0deac587d0a3d5d7cefe99815a580de2",
  "_shrinkwrap": null,
  "_spec": "eslint-plugin-jest@^24.1.0",
  "_where": "/home/bagas/Documents/2.February/MyLife_Web_1.0.0/node_modules/react-scripts",
  "author": {
    "name": "Jonathan Kim",
    "email": "hello@jkimbo.com",
    "url": "jkimbo.com"
  },
  "bugs": {
    "url": "https://github.com/jest-community/eslint-plugin-jest/issues"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "dependencies": {
    "@typescript-eslint/experimental-utils": "^4.0.1"
  },
  "description": "Eslint rules for Jest",
  "devDependencies": {
    "@babel/cli": "^7.4.4",
    "@babel/core": "^7.4.4",
    "@babel/preset-env": "^7.4.4",
    "@babel/preset-typescript": "^7.3.3",
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-conventional": "^11.0.0",
    "@schemastore/package": "^0.0.6",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/git": "^9.0.0",
    "@types/dedent": "^0.7.0",
    "@types/jest": "^26.0.0",
    "@types/node": "^14.0.0",
    "@types/prettier": "^2.0.0",
    "@typescript-eslint/eslint-plugin": "^4.0.1",
    "@typescript-eslint/parser": "^4.0.1",
    "babel-jest": "^26.0.1",
    "babel-plugin-replace-ts-export-assignment": "^0.0.2",
    "dedent": "^0.7.0",
    "eslint": "^5.1.0 || ^6.0.0 || ^7.0.0",
    "eslint-config-prettier": "^6.5.0",
    "eslint-plugin-eslint-comments": "^3.1.2",
    "eslint-plugin-eslint-config": "^2.0.0",
    "eslint-plugin-eslint-plugin": "^2.0.0",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-node": "^11.0.0",
    "eslint-plugin-prettier": "^3.0.0",
    "husky": "^4.2.5",
    "jest": "^26.0.1",
    "jest-runner-eslint": "^0.10.0",
    "lint-staged": "^10.2.2",
    "prettier": "^2.0.5",
    "resolve-from": "^5.0.0",
    "rimraf": "^3.0.0",
    "semantic-release": "^17.0.7",
    "ts-node": "^9.0.0",
    "typescript": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-FIP3lwC8EzEG+rOs1y96cOJmMVpdFNreoDJv29B5vIupVssRi8zrSY3QadogT0K3h1Y8TMxJ6ZSAzYUmFCp2hg==",
    "shasum": "1e866a9f0deac587d0a3d5d7cefe99815a580de2",
    "tarball": "https://registry.npmjs.org/eslint-plugin-jest/-/eslint-plugin-jest-24.1.5.tgz",
    "fileCount": 96,
    "unpackedSize": 238702,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgLJ3pCRA9TVsSAnZWagAAK/gP/AoCRLGOWgOq7C4lYrsm\nU3JxXwMK+/SW90J2G4W/MfsvrixHI3/N0EXkpv59DjcwssTkjx9N1e0xbiLt\nGPgs7pZ6qNipCvxHqkpqwC0T8Q0NzC7mZYy+GT1jZI95L669Qda6FPTe3XdM\nEN/Lt3+4q94RpW6y3eh5O9Dof16Lnu5FuOQucDnTREM58am2RuP4G9j6oOdl\nsxYyotprGkzWSLxJXf+bVhyGXZ2dbDmTd1T2jtKIKw5ramAgGZvSpjoJltJ0\n/S15hoFGp2s8yv4V4wlwA3xtRkbNn3izCTRxCySvl8/Jx3b844HHzNfYNWjL\nWoByh7QycgpDPCSs/wS2KVIgxxe0FaGhbm/LvucWONTBnMdPsY6D2C2vjQWv\ngU6u9s5DadCl2cC1JSPZBIMASkPIDY+w9XtNqy7AkdHq9T8CQuJ9KirAEBBY\nJJnf/i9WMjvLjR79vEZsOGLpGS8FVCL7NhCf+lswH016TLUwnAPRfvq9FOAL\nFqpY8YhvF67vmwJopWKTcBSikfC9rEcQI+4zHtBWV3f35xLTgE/AdB9TdGa0\n5nwpiu+ZfmXdlzoOwpug47jLxJKdViGE/V8b6meCWDcPv/GIjUF33bfUmLi+\n7gfPb1gp/CXrPl/IXFOA960ijqNwEDdDosJfdNqeRamQQ6+pEUsUfcNq2WtV\n8owz\r\n=YlOE\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=10"
  },
  "files": [
    "docs/",
    "lib/"
  ],
  "gitHead": "01563ec50cc564405eb87298e8201b931a99c0f3",
  "homepage": "https://github.com/jest-community/eslint-plugin-jest#readme",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -e $HUSKY_GIT_PARAMS"
    }
  },
  "jest": {
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    },
    "projects": [
      {
        "displayName": "test",
        "testEnvironment": "node",
        "testPathIgnorePatterns": [
          "<rootDir>/lib/.*"
        ]
      },
      {
        "displayName": "lint",
        "runner": "jest-runner-eslint",
        "testMatch": [
          "<rootDir>/**/*.{js,ts}"
        ],
        "testPathIgnorePatterns": [
          "<rootDir>/lib/.*"
        ]
      }
    ]
  },
  "keywords": [
    "eslint",
    "eslintplugin",
    "eslint-plugin"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,ts}": "eslint --fix",
    "*.{md,json,yml}": "prettier --write"
  },
  "main": "lib/",
  "maintainers": [
    {
      "name": "simenb",
      "email": "sbekkhus91@gmail.com"
    },
    {
      "name": "rickhanlonii",
      "email": "rickhanlonii@gmail.com"
    },
    {
      "name": "thymikee",
      "email": "thymikee@gmail.com"
    },
    {
      "name": "jsonp",
      "email": "jason@jason-palmer.com"
    },
    {
      "name": "orta",
      "email": "orta.therox@gmail.com"
    },
    {
      "name": "rogeliog",
      "email": "rogelioguzmanh@gmail.com"
    },
    {
      "name": "rubennorte",
      "email": "rubennorte@gmail.com"
    },
    {
      "name": "cpojer",
      "email": "christoph.pojer@gmail.com"
    },
    {
      "name": "fb",
      "email": "opensource+npm@fb.com"
    },
    {
      "name": "aaronabramov",
      "email": "aaron@abramov.io"
    }
  ],
  "name": "eslint-plugin-jest",
  "optionalDependencies": {},
  "peerDependencies": {
    "eslint": ">=5"
  },
  "prettier": {
    "arrowParens": "avoid",
    "endOfLine": "auto",
    "proseWrap": "always",
    "singleQuote": true,
    "trailingComma": "all"
  },
  "readme": "<div align=\"center\">\n  <a href=\"https://eslint.org/\">\n    <img width=\"150\" height=\"150\" src=\"https://eslint.org/assets/img/logo.svg\">\n  </a>\n  <a href=\"https://facebook.github.io/jest/\">\n    <img width=\"150\" height=\"150\" vspace=\"\" hspace=\"25\" src=\"https://jestjs.io/img/jest.png\">\n  </a>\n  <h1>eslint-plugin-jest</h1>\n  <p>ESLint plugin for Jest</p>\n</div>\n\n[![Actions Status](https://github.com/jest-community/eslint-plugin-jest/workflows/Unit%20tests/badge.svg?branch=master)](https://github.com/jest-community/eslint-plugin-jest/actions)\n\n## Installation\n\n```\n$ yarn add --dev eslint eslint-plugin-jest\n```\n\n**Note:** If you installed ESLint globally then you must also install\n`eslint-plugin-jest` globally.\n\n## Usage\n\nAdd `jest` to the plugins section of your `.eslintrc` configuration file. You\ncan omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\"jest\"]\n}\n```\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"jest/no-disabled-tests\": \"warn\",\n    \"jest/no-focused-tests\": \"error\",\n    \"jest/no-identical-title\": \"error\",\n    \"jest/prefer-to-have-length\": \"warn\",\n    \"jest/valid-expect\": \"error\"\n  }\n}\n```\n\nYou can also tell ESLint about the environment variables provided by Jest by\ndoing:\n\n```json\n{\n  \"env\": {\n    \"jest/globals\": true\n  }\n}\n```\n\nThis is included in all configs shared by this plugin, so can be omitted if\nextending them.\n\nThe behaviour of some rules (specifically `no-deprecated-functions`) change\ndepending on the version of `jest` being used.\n\nThis setting is detected automatically based off the version of the `jest`\npackage installed in `node_modules`, but it can also be provided explicitly if\ndesired:\n\n```json\n{\n  \"settings\": {\n    \"jest\": {\n      \"version\": 26\n    }\n  }\n}\n```\n\n## Shareable configurations\n\n### Recommended\n\nThis plugin exports a recommended configuration that enforces good testing\npractices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/recommended\"]\n}\n```\n\n### Style\n\nThis plugin also exports a configuration named `style`, which adds some\nstylistic rules, such as `prefer-to-be-null`, which enforces usage of `toBeNull`\nover `toBe(null)`.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/style\"]\n}\n```\n\nSee\n[ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files)\nfor more information about extending configuration files.\n\n### All\n\nIf you want to enable all rules instead of only some you can do so by adding the\n`all` configuration to your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/all\"]\n}\n```\n\nWhile the `recommended` and `style` configurations only change in major versions\nthe `all` configuration may change in any release and is thus unsuited for\ninstallations requiring long-term consistency.\n\n## Rules\n\n<!-- begin rules list -->\n\n| Rule                                                                         | Description                                                     | Configurations   | Fixable      |\n| ---------------------------------------------------------------------------- | --------------------------------------------------------------- | ---------------- | ------------ |\n| [consistent-test-it](docs/rules/consistent-test-it.md)                       | Have control over `test` and `it` usages                        |                  | ![fixable][] |\n| [expect-expect](docs/rules/expect-expect.md)                                 | Enforce assertion to be made in a test body                     | ![recommended][] |              |\n| [lowercase-name](docs/rules/lowercase-name.md)                               | Enforce lowercase test names                                    |                  | ![fixable][] |\n| [no-alias-methods](docs/rules/no-alias-methods.md)                           | Disallow alias methods                                          | ![style][]       | ![fixable][] |\n| [no-commented-out-tests](docs/rules/no-commented-out-tests.md)               | Disallow commented out tests                                    | ![recommended][] |              |\n| [no-conditional-expect](docs/rules/no-conditional-expect.md)                 | Prevent calling `expect` conditionally                          | ![recommended][] |              |\n| [no-deprecated-functions](docs/rules/no-deprecated-functions.md)             | Disallow use of deprecated functions                            | ![recommended][] | ![fixable][] |\n| [no-disabled-tests](docs/rules/no-disabled-tests.md)                         | Disallow disabled tests                                         | ![recommended][] |              |\n| [no-done-callback](docs/rules/no-done-callback.md)                           | Avoid using a callback in asynchronous tests and hooks          | ![recommended][] | ![suggest][] |\n| [no-duplicate-hooks](docs/rules/no-duplicate-hooks.md)                       | Disallow duplicate setup and teardown hooks                     |                  |              |\n| [no-export](docs/rules/no-export.md)                                         | Disallow using `exports` in files containing tests              | ![recommended][] |              |\n| [no-focused-tests](docs/rules/no-focused-tests.md)                           | Disallow focused tests                                          | ![recommended][] | ![fixable][] |\n| [no-hooks](docs/rules/no-hooks.md)                                           | Disallow setup and teardown hooks                               |                  |              |\n| [no-identical-title](docs/rules/no-identical-title.md)                       | Disallow identical titles                                       | ![recommended][] |              |\n| [no-if](docs/rules/no-if.md)                                                 | Disallow conditional logic                                      |                  |              |\n| [no-interpolation-in-snapshots](docs/rules/no-interpolation-in-snapshots.md) | Disallow string interpolation inside snapshots                  | ![recommended][] |              |\n| [no-jasmine-globals](docs/rules/no-jasmine-globals.md)                       | Disallow Jasmine globals                                        | ![recommended][] | ![fixable][] |\n| [no-jest-import](docs/rules/no-jest-import.md)                               | Disallow importing Jest                                         | ![recommended][] |              |\n| [no-large-snapshots](docs/rules/no-large-snapshots.md)                       | disallow large snapshots                                        |                  |              |\n| [no-mocks-import](docs/rules/no-mocks-import.md)                             | Disallow manually importing from `__mocks__`                    | ![recommended][] |              |\n| [no-restricted-matchers](docs/rules/no-restricted-matchers.md)               | Disallow specific matchers & modifiers                          |                  |              |\n| [no-standalone-expect](docs/rules/no-standalone-expect.md)                   | Disallow using `expect` outside of `it` or `test` blocks        | ![recommended][] |              |\n| [no-test-prefixes](docs/rules/no-test-prefixes.md)                           | Use `.only` and `.skip` over `f` and `x`                        | ![recommended][] | ![fixable][] |\n| [no-test-return-statement](docs/rules/no-test-return-statement.md)           | Disallow explicitly returning from tests                        |                  |              |\n| [prefer-called-with](docs/rules/prefer-called-with.md)                       | Suggest using `toBeCalledWith()` or `toHaveBeenCalledWith()`    |                  |              |\n| [prefer-expect-assertions](docs/rules/prefer-expect-assertions.md)           | Suggest using `expect.assertions()` OR `expect.hasAssertions()` |                  | ![suggest][] |\n| [prefer-hooks-on-top](docs/rules/prefer-hooks-on-top.md)                     | Suggest having hooks before any test cases                      |                  |              |\n| [prefer-spy-on](docs/rules/prefer-spy-on.md)                                 | Suggest using `jest.spyOn()`                                    |                  | ![fixable][] |\n| [prefer-strict-equal](docs/rules/prefer-strict-equal.md)                     | Suggest using `toStrictEqual()`                                 |                  | ![suggest][] |\n| [prefer-to-be-null](docs/rules/prefer-to-be-null.md)                         | Suggest using `toBeNull()`                                      | ![style][]       | ![fixable][] |\n| [prefer-to-be-undefined](docs/rules/prefer-to-be-undefined.md)               | Suggest using `toBeUndefined()`                                 | ![style][]       | ![fixable][] |\n| [prefer-to-contain](docs/rules/prefer-to-contain.md)                         | Suggest using `toContain()`                                     | ![style][]       | ![fixable][] |\n| [prefer-to-have-length](docs/rules/prefer-to-have-length.md)                 | Suggest using `toHaveLength()`                                  | ![style][]       | ![fixable][] |\n| [prefer-todo](docs/rules/prefer-todo.md)                                     | Suggest using `test.todo`                                       |                  | ![fixable][] |\n| [require-to-throw-message](docs/rules/require-to-throw-message.md)           | Require a message for `toThrow()`                               |                  |              |\n| [require-top-level-describe](docs/rules/require-top-level-describe.md)       | Require test cases and hooks to be inside a `describe` block    |                  |              |\n| [valid-describe](docs/rules/valid-describe.md)                               | Enforce valid `describe()` callback                             | ![recommended][] |              |\n| [valid-expect](docs/rules/valid-expect.md)                                   | Enforce valid `expect()` usage                                  | ![recommended][] |              |\n| [valid-expect-in-promise](docs/rules/valid-expect-in-promise.md)             | Enforce having return statement when testing with promises      | ![recommended][] |              |\n| [valid-title](docs/rules/valid-title.md)                                     | Enforce valid titles                                            | ![recommended][] | ![fixable][] |\n\n<!-- end rules list -->\n\n## Credit\n\n- [eslint-plugin-mocha](https://github.com/lo1tuma/eslint-plugin-mocha)\n- [eslint-plugin-jasmine](https://github.com/tlvince/eslint-plugin-jasmine)\n\n## Related Projects\n\n### eslint-plugin-jest-formatting\n\nThis project aims to provide formatting rules (auto-fixable where possible) to\nensure consistency and readability in jest test suites.\n\nhttps://github.com/dangreenisrael/eslint-plugin-jest-formatting\n\n[recommended]: https://img.shields.io/badge/-recommended-lightgrey.svg\n[suggest]: https://img.shields.io/badge/-suggest-yellow.svg\n[fixable]: https://img.shields.io/badge/-fixable-green.svg\n[style]: https://img.shields.io/badge/-style-blue.svg\n",
  "readmeFilename": "README.md",
  "release": {
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/git",
      "@semantic-release/github"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jest-community/eslint-plugin-jest.git"
  },
  "scripts": {
    "build": "babel --extensions .js,.ts src --out-dir lib --copy-files && rimraf lib/__tests__ 'lib/**/__tests__'",
    "lint": "eslint . --ignore-pattern '!.eslintrc.js' --ext js,ts",
    "prepack": "rimraf lib && yarn build",
    "prettier:check": "prettier --check 'docs/**/*.md' README.md '.github/**' package.json tsconfig.json src/globals.json .yarnrc.yml",
    "prettier:write": "prettier --write 'docs/**/*.md' README.md '.github/**' package.json tsconfig.json src/globals.json .yarnrc.yml",
    "test": "jest",
    "tools:regenerate-docs": "ts-node -T tools/regenerate-docs",
    "typecheck": "tsc -p ."
  },
  "version": "24.1.5"
}
