{
  "_args": [
    [
      {
        "raw": "@surma/rollup-plugin-off-main-thread@^1.1.1",
        "scope": "@surma",
        "escapedName": "@surma%2frollup-plugin-off-main-thread",
        "name": "@surma/rollup-plugin-off-main-thread",
        "rawSpec": "^1.1.1",
        "spec": ">=1.1.1 <2.0.0",
        "type": "range"
      },
      "/home/bagas/Documents/2.February/MyLife_Web_1.0.0/node_modules/workbox-build"
    ]
  ],
  "_from": "@surma/rollup-plugin-off-main-thread@^1.1.1",
  "_hasShrinkwrap": false,
  "_id": "@surma/rollup-plugin-off-main-thread@1.4.2",
  "_location": "/@surma/rollup-plugin-off-main-thread",
  "_nodeVersion": "14.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rollup-plugin-off-main-thread_1.4.2_1605103879792_0.5778528345798681"
  },
  "_npmUser": {
    "name": "surma",
    "email": "surma@surma.link"
  },
  "_npmVersion": "6.14.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@surma/rollup-plugin-off-main-thread@^1.1.1",
    "scope": "@surma",
    "escapedName": "@surma%2frollup-plugin-off-main-thread",
    "name": "@surma/rollup-plugin-off-main-thread",
    "rawSpec": "^1.1.1",
    "spec": ">=1.1.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/workbox-build"
  ],
  "_resolved": "https://registry.npmjs.org/@surma/rollup-plugin-off-main-thread/-/rollup-plugin-off-main-thread-1.4.2.tgz",
  "_shasum": "e6786b6af5799f82f7ab3a82e53f6182d2b91a58",
  "_shrinkwrap": null,
  "_spec": "@surma/rollup-plugin-off-main-thread@^1.1.1",
  "_where": "/home/bagas/Documents/2.February/MyLife_Web_1.0.0/node_modules/workbox-build",
  "author": {
    "name": "Surma",
    "email": "surma@google.com"
  },
  "bugs": {
    "url": "https://github.com/surma/rollup-plugin-off-main-thread/issues"
  },
  "dependencies": {
    "ejs": "^2.6.1",
    "magic-string": "^0.25.0"
  },
  "description": "Use Rollup with workers and ES6 modules today.",
  "devDependencies": {
    "chai": "4.2.0",
    "karma": "4.2.0",
    "karma-chai": "0.1.0",
    "karma-chrome-launcher": "3.0.0",
    "karma-firefox-launcher": "1.1.0",
    "karma-mocha": "1.3.0",
    "karma-safari-launcher": "1.0.0",
    "karma-safaritechpreview-launcher": "2.0.2",
    "mocha": "6.1.4",
    "prettier": "1.18.2",
    "rollup": "2.0.0-0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-yBMPqmd1yEJo/280PAMkychuaALyQ9Lkb5q1ck3mjJrFuEobIfhnQ4J3mbvBoISmR3SWMWV+cGB/I0lCQee79A==",
    "shasum": "e6786b6af5799f82f7ab3a82e53f6182d2b91a58",
    "tarball": "https://registry.npmjs.org/@surma/rollup-plugin-off-main-thread/-/rollup-plugin-off-main-thread-1.4.2.tgz",
    "fileCount": 79,
    "unpackedSize": 77792,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfq/EICRA9TVsSAnZWagAA4McP/243ux0C83w5x8sC6ZkA\nMFyQK0AKrGDxwsH3RXCungvzMkO9RAoY1D7E3wkXv7bJA7uIa7xDWIFjQ+VO\niYdbheIX+S3egWAFpnrH7rSu54TIPfduidfRQ8cQGkuiKCQ4TJxZ+fE5WXjO\nK/Mqw5hVZxnqowOl+1MsSf6fLvkz5FaSXe6K9/aESI2hvACdstJogbnr1VH1\nmh/rJ5921dhFgKaplIjgx9tcaVjoRNASrJavqMFfotnE+XpgX74khLTwF6VV\nTlUesncfy2Hu0lfCgvUsDymKgjNJc8EkmlQQxFylVAiUIzl6cKykb5os0s8s\nUKklPWhFJNfIovmra+QlNX1Ck7JSIj7c4RANAuRqFG0SSW/XI54Mt4Rg9IVS\n896oHU6BONPjcL+YlIjnvDMLf8KJkxQ9EqP11eZld4Tzt3Gpu+/ZdC18TSoV\nSDRHMI4/WJIn89XU8QErZdxb940dqlmVS1+uRs216g34cEQhD9niS8E1+Csc\nLsXLXArAg5JqO3BlBYFdyLr/rVHhXcUyCJ7HXtdn6csxX0lLt4PlxqxdClsi\nT15oxiEwqR+ENBk/c7dnDvjFf2T2f4XwBwrDoqmpNTfShoVO2RE39bBlEq1/\nLdwu1ylG4fPGpR1aqhu9bPNLg+2u8VwMqZw3nA3CGJ/F+8PM7XPn7WgIl1+9\nQVTt\r\n=51eY\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "15d7b01acf36a0532cca8f1ad663ec6460c64a6e",
  "homepage": "https://github.com/surma/rollup-plugin-off-main-thread#readme",
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "surma",
      "email": "surma@surma.link"
    }
  ],
  "name": "@surma/rollup-plugin-off-main-thread",
  "optionalDependencies": {},
  "readme": "# rollup-plugin-off-main-thread\n\nUse Rollup with workers and ES6 modules _today_.\n\n```\n$ npm install --save @surma/rollup-plugin-off-main-thread\n```\n\nWorkers are JavaScript’s version of threads. [Workers are important to use][when workers] as the main thread is already overloaded, especially on slower or older devices.\n\nThis plugin takes care of shimming module support in workers and allows you to use `new Worker()`.\n\nOMT is the result of merging loadz0r and workz0r.\n\n## Usage\n\nI set up [a gist] to show a full setup with OMT.\n\n### Config\n\n```js\n// rollup.config.js\nimport OMT from \"@surma/rollup-plugin-off-main-thread\";\n\nexport default {\n  input: [\"src/main.js\"],\n  output: {\n    dir: \"dist\",\n    // You _must_ use either “amd” or “esm” as your format.\n    // But note that only very few browsers have native support for\n    // modules in workers.\n    format: \"amd\"\n  },\n  plugins: [OMT()]\n};\n```\n\n### Auto bundling\n\nIn your project's code:\n\n```js\nconst worker = new Worker(\"./worker.js\", { type: \"module\" });\n```\n\nThis will just work.\n\n### Importing workers as URLs\n\nIf your worker constructor doesn't match `workerRegexp` (see options below), you might find it easier to import the worker as a URL. In your project's code:\n\n```js\nimport workerURL from \"omt:./worker.js\";\nimport paintWorkletURL from \"omt:./paint-worklet.js\";\n\nconst worker = new Worker(workerURL, { name: \"main-worker\" });\nCSS.paintWorklet.addModule(paintWorkletURL);\n```\n\n`./worker.js` and `./paint-worklet.js` will be added to the output as chunks.\n\n## Options\n\n```js\n{\n  // ...\n  plugins: [OMT(options)];\n}\n```\n\n- `loader`: A string containing the EJS template for the amd loader. If `undefined`, OMT will use `loader.ejs`.\n- `useEval`: Use `fetch()` + `eval()` to load dependencies instead of `<script>` tags and `importScripts()`. _This is not CSP compliant, but is required if you want to use dynamic imports in ServiceWorker_.\n- `workerRegexp`: A RegExp to find `new Workers()` calls. The second capture group _must_ capture the provided file name without the quotes.\n- `amdFunctionName`: Function name to use instead of AMD’s `define`.\n- `prependLoader`: A function that determines whether the loader code should be prepended to a certain chunk. Should return true if the load is suppsoed to be prepended.\n- `urlLoaderScheme`: Scheme to use when importing workers as URLs. If `undefined`, OMT will use `\"omt\"`.\n\n[when workers]: https://dassur.ma/things/when-workers\n[a gist]: https://gist.github.com/surma/a02db7b53eb3e7870bf539b906ff6ff6\n\n---\n\nLicense Apache-2.0\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/surma/rollup-plugin-off-main-thread.git"
  },
  "scripts": {
    "fmt": "prettier --write 'tests/**/*.js' *.js *.md *.json",
    "test": "node ./run_tests.js"
  },
  "version": "1.4.2"
}
